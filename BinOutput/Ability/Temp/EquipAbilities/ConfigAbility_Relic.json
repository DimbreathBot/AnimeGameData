[
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_FighterAttackUp_Lv5",
      "abilitySpecials": {
        "AttackRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_FighterAttackUp_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "AttackRatio"
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "DMHLALOGPAH",
              "weaponTypes": [
                "WEAPON_SWORD_ONE_HAND",
                "WEAPON_CLAYMORE",
                "WEAPON_POLE"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_FighterAttackUp_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RangerAttackUp_Lv5",
      "abilitySpecials": {
        "AttackRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_RangerAttackUp_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "AttackRatio"
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "DMHLALOGPAH",
              "weaponTypes": [
                "WEAPON_CATALYST",
                "WEAPON_BOW"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_RangerAttackUp_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementDamageUpWhenChangeChar_Lv5",
      "abilitySpecials": {
        "ElementDamageUp": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ElementDamageUpWhenChangeChar_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 10.0,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireAddHurtDelta": "ElementDamageUp",
            "Actor_WaterAddHurtDelta": "ElementDamageUp",
            "Actor_GrassAddHurtDelta": "ElementDamageUp",
            "Actor_IceAddHurtDelta": "ElementDamageUp",
            "Actor_RockAddHurtDelta": "ElementDamageUp",
            "Actor_ElecAddHurtDelta": "ElementDamageUp",
            "Actor_WindAddHurtDelta": "ElementDamageUp"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAvatarIn": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ElementDamageUpWhenChangeChar_Lv5"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpAfterElementBall_Lv5",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEnergyChangeMixin",
          "elementTypes": [
            "Electric",
            "Fire",
            "Water",
            "Grass",
            "Ice",
            "Wind",
            "Rock",
            "None"
          ],
          "doWhenEnergyMax": true,
          "onGainEnergyByBall": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_AttackUpAfterElementBall_Lv5"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "AttackRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUpAfterElementBall_Lv5": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 10.0,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "AttackRatio"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ExtraAtkCritUp",
      "abilitySpecials": {
        "CritRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ExtraAtkCritUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "AILJJDMKONE": 0.0,
              "actorElementReactionCriticalHurtDelta": "CritRate"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ExtraAtkCritUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_GiantKiller",
      "abilitySpecials": {
        "Rate": 0.0,
        "HPRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_GiantKiller_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "AILJJDMKONE": "Rate",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "JAEEKGKDNDI",
                  "logic": "GreaterOrEqual",
                  "ratio": "HPRatio"
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_GiantKiller_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AbsorbTeamElemResist",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByTeamStatusMixin",
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_ElementAllDefUp"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementFireDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementWaterDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementWindDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementElecDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementIceDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementRockDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": 0.0,
              "overrideMapKey": "ElementGrassDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Fire",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementFireDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Water",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementWaterDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Wind",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementWindDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Electric",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementElecDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Ice",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementIceDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Rock",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementRockDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "IMAKHBDLHKM",
                  "elementType": "Grass",
                  "number": 1,
                  "logic": "GreaterOrEqual"
                }
              ],
              "param3": 1.0,
              "overrideMapKey": "ElementGrassDefUp",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_ElementAllDefUp"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "ResistUp": 0.0,
        "ElementFireDefUp": 0.0,
        "ElementWaterDefUp": 0.0,
        "ElementWindDefUp": 0.0,
        "ElementElecDefUp": 0.0,
        "ElementIceDefUp": 0.0,
        "ElementRockDefUp": 0.0,
        "ElementGrassDefUp": 0.0
      },
      "modifiers": {
        "UNIQUE_ElementAllDefUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireSubHurtDelta": [
              "ElementFireDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_WaterSubHurtDelta": [
              "ElementWaterDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_WindSubHurtDelta": [
              "ElementWindDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_ElecSubHurtDelta": [
              "ElementElecDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_IceSubHurtDelta": [
              "ElementIceDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_RockSubHurtDelta": [
              "ElementRockDefUp",
              "ResistUp",
              "MUL"
            ],
            "Actor_GrassSubHurtDelta": [
              "ElementGrassDefUp",
              "ResistUp",
              "MUL"
            ]
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AllElemResistUp",
      "abilitySpecials": {
        "ResistUp": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AllElemResistUp": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireSubHurtDelta": "ResistUp",
            "Actor_WaterSubHurtDelta": "ResistUp",
            "Actor_WindSubHurtDelta": "ResistUp",
            "Actor_ElecSubHurtDelta": "ResistUp",
            "Actor_IceSubHurtDelta": "ResistUp",
            "Actor_RockSubHurtDelta": "ResistUp",
            "Actor_GrassSubHurtDelta": "ResistUp"
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AllElemResistUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElemDmgEnhanceElemResist",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ElemDmgEnhanceElemResist_CD",
            "UNIQUE_Relic_ElemDmgEnhanceElemResist_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "ResistUp": 0.0,
        "Dura": 0.0,
        "CDTime": 0.009999999776482582
      },
      "modifiers": {
        "UNIQUE_Relic_ElemDmgEnhanceElemResist_Handler": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "FLLFBKEHJMH",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO"
                    }
                  ]
                },
                {
                  "$type": "CCPPBGKEJBP",
                  "enBreak": 0.0
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Fire"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementFireDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Water"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementWaterDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Grass"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementGrassDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Electric"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementElecDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Ice"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementIceDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Wind"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementWindDefUp"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Rock"
                    }
                  ],
                  "modifierName": "UNIQUE_ElementRockDefUp"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ElemDmgEnhanceElemResist_CD": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 10.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_ElementFireDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementWaterDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_WaterSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementWindDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_WindSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementElecDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElecSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementIceDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_IceSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementRockDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_RockSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_ElementGrassDefUp": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_GrassSubHurtDelta": "ResistUp"
          },
          "state": "DefenseUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": -1.0,
              "key": "_ABILITY_Relic_ElemDmgEnhanceElemResist",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "isLimitedProperties": true
        }
      },
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementFireDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementWaterDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementElecDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementIceDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementWindDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementRockDefUp"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_ElementGrassDefUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_LowHPGainExtraCritRate",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToPredicateMixin",
          "predicates": [
            {
              "$type": "JAEEKGKDNDI",
              "logic": "LesserOrEqual",
              "ratio": "HPRatio"
            }
          ],
          "modifierName": "UNIQUE_Relic_LowHPGainExtraCritRate"
        }
      ],
      "abilitySpecials": {
        "CritRate": 0.0,
        "HPRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_LowHPGainExtraCritRate": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_CriticalDelta": "CritRate"
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AtkAndExtraAtkUp",
      "abilitySpecials": {
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AtkAndExtraAtkUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AtkAndExtraAtkUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillEnhanceNormalAtkAndExtraAtk",
      "abilitySpecials": {
        "duration": 0.0,
        "stack": 0.0,
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk"
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ]
        },
        "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "stack"
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "duration",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ],
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_SkillEnhanceNormalAtkAndExtraAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionGainExtraElemMasteryForTeam",
      "abilitySpecials": {
        "duration": 0.0,
        "ElemMastery": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionGainExtraElemMasteryForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode",
                "Stream",
                "Burning",
                "Melt",
                "Freeze",
                "Shock",
                "Superconductor",
                "SwirlFire",
                "SwirlWater",
                "SwirlElectric",
                "SwirlIce",
                "CrystallizeFire",
                "CrystallizeWater",
                "CrystallizeElectric",
                "CrystallizeIce",
                "Overdose",
                "OverdoseElectric",
                "OverdoseGrass",
                "Overgrow",
                "OvergrowMushroomFire",
                "OvergrowMushroomElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.RemoveUniqueModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "modifierName": "UNIQUE_ReactionGainExtraElemMasteryForTeam"
                },
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "modifierName": "UNIQUE_ReactionGainExtraElemMasteryForTeam"
                }
              ]
            }
          ]
        },
        "UNIQUE_ReactionGainExtraElemMasteryForTeam": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "duration",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemMasteryDelta": "ElemMastery"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionGainExtraElemMasteryForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillDamageUp",
      "abilitySpecials": {
        "DamagePer": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_SkillDamageUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra"
              ],
              "AILJJDMKONE": "DamagePer"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_SkillDamageUp_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_KillingRefreshSkill",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_KillingRefreshSkill",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_KillingRefreshSkill_CD",
            "UNIQUE_Relic_KillingRefreshSkill_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "CDTime": 0.0,
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_KillingRefreshSkill_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByKillingMixin",
              "detectWindow": 0.6000000238418579,
              "onKill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Other",
                  "targetPredicates": [
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.Randomed",
                      "chance": "Rate",
                      "successActions": [
                        {
                          "$type": "MoleMole.Config.ApplyModifier",
                          "modifierName": "UNIQUE_Relic_KillingRefreshSkill"
                        },
                        {
                          "$type": "MoleMole.Config.AddGlobalValue",
                          "param3": -1.0,
                          "key": "_ABILITY_Relic_KillingRefreshSkill",
                          "useLimitRange": true,
                          "param2": -1.0,
                          "triggerID": -1.0
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_KillingRefreshSkill_CD": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_KillingRefreshSkill",
              "useLimitRange": true,
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_KillingRefreshSkill"
            }
          ]
        },
        "UNIQUE_Relic_KillingRefreshSkill": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.ModifyAvatarSkillCD",
              "skillSlot": [
                2
              ],
              "amountByTargetCurrentHPRatio": -1.0
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_UltGainEnergyForTeam",
      "abilitySpecials": {
        "EnergyAmount": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_UltGainEnergyForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerUltimateSkill": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "KHCIBKLALCK",
                      "isTarget": false,
                      "EFHKFHFMKIF": ""
                    },
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam"
                },
                {
                  "$type": "MoleMole.Config.AddElementDurability",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "KHCIBKLALCK",
                      "isTarget": false,
                      "EFHKFHFMKIF": ""
                    },
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "param3": 100.0,
                  "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam",
                  "useLimitRange": true,
                  "param2": 100.0
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ]
        },
        "UNIQUE_Relic_UltGainEnergyForTeam": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 6.5,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ReviveElemEnergyMixin",
              "period": 2.0,
              "baseEnergy": "EnergyAmount",
              "hpRatio": 1.0
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_UltGainEnergyForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ChestHealSelf",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEventMixin",
          "damageRatio": "Current",
          "onEvent": "ChestOpen",
          "actions": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_ChestHealSelf"
            }
          ],
          "costEnergyDeltaName": ""
        }
      ],
      "abilitySpecials": {
        "HealDuration": 0.0,
        "HealInterval": 0.0,
        "HealRatio": 0.0,
        "Dura_Delay": 0.5
      },
      "modifiers": {
        "UNIQUE_Relic_ChestHealSelf": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": [
            "HealDuration",
            "Dura_Delay",
            "ADD"
          ],
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "HealInterval",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.HealHP",
              "OLMENJCGGJJ": "HealRatio",
              "cdRatio": ""
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CoinHealSelf",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEventMixin",
          "damageRatio": "Current",
          "onEvent": "PickItem",
          "pickItemConfigIDs": [
            70590011
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_CoinHealSelf"
            }
          ],
          "costEnergyDeltaName": ""
        }
      ],
      "abilitySpecials": {
        "HealAmount": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_CoinHealSelf": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 1.0,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.HealHP",
              "LKDJMGOJHAH": "HealAmount",
              "cdRatio": ""
            }
          ]
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RestoreEnergyGainExtraEnergyForTeam",
      "abilitySpecials": {
        "EnergyAmount": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_RestoreEnergyGainExtraEnergyForTeam_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByEnergyChangeMixin",
              "elementTypes": [
                "Electric",
                "Fire",
                "Water",
                "Grass",
                "Ice",
                "Wind",
                "Rock"
              ],
              "doWhenEnergyMax": true,
              "onGainEnergyByBall": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "predicates": [
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "modifierName": "UNIQUE_CheckBoworMage"
                }
              ]
            }
          ]
        },
        "UNIQUE_CheckBoworMage": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 3.0,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "predicates": [
                {
                  "$type": "DMHLALOGPAH",
                  "weaponTypes": [
                    "WEAPON_CATALYST",
                    "WEAPON_BOW"
                  ]
                }
              ],
              "modifierName": "RestoreEnergyGainExtraEnergyForTeam"
            }
          ]
        },
        "RestoreEnergyGainExtraEnergyForTeam": {
          "modifierName": "",
          "elementDurability": 0.15000000596046448,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.ReviveElemEnergy",
              "temperature": true,
              "param3": "EnergyAmount"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_RestoreEnergyGainExtraEnergyForTeam_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_UltHealSelf",
      "abilitySpecials": {
        "HealRatio": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_UltHealSelf_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerUltimateSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_UltHealSelf"
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ]
        },
        "UNIQUE_Relic_UltHealSelf": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 1.0,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.HealHP",
              "OLMENJCGGJJ": "HealRatio",
              "cdRatio": ""
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_UltHealSelf_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CriticUpAgainstIceAndFrozen",
      "abilitySpecials": {
        "Rate1": 0.0,
        "Rate2": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_CriticUpAgainstIceAndFrozen_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "AILJJDMKONE": 0.0,
              "actorElementReactionCriticalHurtDelta": "Rate1",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "BNNPNEDKIIH",
                  "predicates": [
                    {
                      "$type": "KKDONNLCCFK",
                      "element": "Ice"
                    },
                    {
                      "$type": "KKDONNLCCFK",
                      "element": "Frozen"
                    }
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "AILJJDMKONE": 0.0,
              "actorElementReactionCriticalHurtDelta": "Rate2",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "NHPKNAEEMEO",
                  "abilityState": "ElementFreeze"
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_CriticUpAgainstIceAndFrozen_Handler"
        }
      ]
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_DamageUpAgainstElectric",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_DamageUpAgainstElectric_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "AILJJDMKONE": "Rate",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "BNNPNEDKIIH",
                  "predicates": [
                    {
                      "$type": "KKDONNLCCFK",
                      "element": "Electric"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_DamageUpAgainstElectric_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_DamageUpAgainstFireAndBurning",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_DamageUpAgainstFireAndBurning_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "ignoreEventInfo": true,
              "AILJJDMKONE": "Rate",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "BNNPNEDKIIH",
                  "predicates": [
                    {
                      "$type": "KKDONNLCCFK",
                      "element": "Fire"
                    },
                    {
                      "$type": "NHPKNAEEMEO",
                      "abilityState": "ElementBurning"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_DamageUpAgainstFireAndBurning_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_SkillEnhanceCured",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            }
          ],
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_SkillEnhanceCured"
            }
          ],
          "clearSkillIdDelay": 0.20000000298023224
        }
      ],
      "abilitySpecials": {
        "HealUp": 0.0,
        "Dura": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_SkillEnhanceCured": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_HealedAddDelta": "HealUp"
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_MeleeAttackUp",
      "abilitySpecials": {
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_MeleeAttackUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "DMHLALOGPAH",
              "weaponTypes": [
                "WEAPON_SWORD_ONE_HAND",
                "WEAPON_CLAYMORE",
                "WEAPON_POLE"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relic_MeleeAttackUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionWindEnhance",
      "abilitySpecials": {
        "ReactionUp": 0.0,
        "ResistDown": 0.0,
        "Dura": 0.0,
        "Minus": -1.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionWindEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlFire"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementFireDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlWater"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementWaterDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementElecDefDown"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "SwirlIce"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Other",
                  "modifierName": "UNIQUE_Relic_ElementIceDefDown"
                }
              ]
            }
          ],
          "properties": {
            "Actor_ElemReactSwirlFireDelta": "ReactionUp",
            "Actor_ElemReactSwirlWaterDelta": "ReactionUp",
            "Actor_ElemReactSwirlIceDelta": "ReactionUp",
            "Actor_ElemReactSwirlElectricDelta": "ReactionUp"
          },
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Swirl_FireDamage",
                    "Swirl_WaterDamage",
                    "Swirl_ElectricDamage",
                    "Swirl_IceDamage",
                    "Self_Swirl_FireDamage",
                    "Self_Swirl_WaterDamage",
                    "Self_Swirl_ElectricDamage",
                    "Self_Swirl_IceDamage"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Fire"
                    },
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementFireDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Water"
                    },
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementWaterDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Electric"
                    },
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementElecDefDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "predicates": [
                    {
                      "$type": "OFJKNHNDFOO",
                      "element": "Ice"
                    },
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementIceDefDown"
                }
              ]
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementFireDefDown": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireSubHurtDelta": [
              "ResistDown",
              "Minus",
              "MUL"
            ]
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementWaterDefDown": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_WaterSubHurtDelta": [
              "ResistDown",
              "Minus",
              "MUL"
            ]
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementIceDefDown": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_IceSubHurtDelta": [
              "ResistDown",
              "Minus",
              "MUL"
            ]
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementElecDefDown": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElecSubHurtDelta": [
              "ResistDown",
              "Minus",
              "MUL"
            ]
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionWindEnhance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relci_RangerAttackUp",
      "abilitySpecials": {
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relci_RangerAttackUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "predicates": [
            {
              "$type": "DMHLALOGPAH",
              "weaponTypes": [
                "WEAPON_CATALYST",
                "WEAPON_BOW"
              ]
            }
          ],
          "modifierName": "UNIQUE_Relci_RangerAttackUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionIceEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_ReactionIceEnhance_Stack"
            }
          ],
          "clearSkillIdDelay": 0.20000000298023224
        }
      ],
      "abilitySpecials": {
        "ReactionUp": 0.0,
        "MeltUp": 0.0,
        "Dura": 0.0,
        "IceUp": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionIceEnhance": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemReactSConductDelta": "ReactionUp",
            "Actor_ElemReactMeltDelta": "MeltUp"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionIceEnhance_Stack": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_IceAddHurtDelta": "IceUp"
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionIceEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionElectricEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_ReactionElectricEnhance",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ReactionElectricEnhance_CD",
            "UNIQUE_Relic_ReactionElectricEnhance_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "ReactionUp": 0.0,
        "CDTime": 0.0,
        "OverdoseElectricReactionUp": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionElectricEnhance": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemReactExplodeDelta": "ReactionUp",
            "Actor_ElemReactSConductDelta": "ReactionUp",
            "Actor_ElemReactElectricDelta": "ReactionUp",
            "Actor_ElemReactOvergrowElectricDelta": "ReactionUp",
            "Actor_ElemReactOverdoseElectricDelta": "OverdoseElectricReactionUp"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionElectricEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode",
                "Superconductor",
                "Shock",
                "Overdose",
                "OverdoseElectric",
                "OvergrowMushroomElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_ReactionElectricEnhance_CDReduce"
                },
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "param3": -1.0,
                  "key": "_ABILITY_Relic_ReactionElectricEnhance",
                  "useLimitRange": true,
                  "param2": -1.0,
                  "triggerID": -1.0
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ReactionElectricEnhance_CD": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_ReactionElectricEnhance",
              "useLimitRange": true,
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_ReactionElectricEnhance_CDReduce": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.ModifyAvatarSkillCD",
              "skillSlot": [
                2
              ],
              "cdMin": -1.0
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_Ability_Relic_CDCount",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionElectricEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionFireEnhance",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerSkill": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_ReactionFireEnhance_Stack"
            }
          ],
          "clearSkillIdDelay": 0.20000000298023224
        }
      ],
      "abilitySpecials": {
        "ReactionUp": 0.0,
        "MeltUp": 0.0,
        "FireUp": 0.0,
        "Dura": 0.0,
        "ExtraPercent": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionFireEnhance": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemReactExplodeDelta": "ReactionUp",
            "Actor_ElemReactBurnDelta": "ReactionUp",
            "Actor_ElemReactOvergrowFireDelta": "ReactionUp",
            "Actor_ElemReactSteamDelta": "MeltUp",
            "Actor_ElemReactMeltDelta": "MeltUp"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ReactionFireEnhance_Stack": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": 3.0
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireAddHurtDelta": [
              "FireUp",
              "ExtraPercent",
              "MUL"
            ]
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionFireEnhance"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "AILJJDMKONE": "Rate",
          "predicates": [
            {
              "$type": "BBBFIPNGHGH",
              "entityTypes": [
                "Monster"
              ]
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": 0.0
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_TeamAtkupAfterElementalBurst",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_TeamAtkupAfterElementalBurst"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_TeamAtkupAfterElementalBurst"
            }
          ],
          "clearSkillIdDelay": 0.20000000298023224
        }
      ],
      "abilitySpecials": {
        "Rate": 0.0,
        "Time": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_TeamAtkupAfterElementalBurst": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true,
          "buffID": 10001
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_KillEnhanceExtraAtk",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_KillEnhanceExtraAtk",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_KillEnhanceExtraAtk_CD",
            "UNIQUE_Relic_KillEnhanceExtraAtk_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "Dura": 0.0,
        "Rate": 0.0,
        "StaminaReduce": 0.0,
        "CDTime": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_KillEnhanceExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByKillingMixin",
              "detectWindow": 0.6000000238418579,
              "onKill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "target": "Other",
                  "targetPredicates": [
                    {
                      "$type": "BBBFIPNGHGH",
                      "entityTypes": [
                        "Monster"
                      ]
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk"
                    },
                    {
                      "$type": "MoleMole.Config.AddGlobalValue",
                      "param3": -1.0,
                      "key": "_ABILITY_Relic_KillEnhanceExtraAtk",
                      "useLimitRange": true,
                      "param2": -1.0,
                      "triggerID": -1.0
                    }
                  ]
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "ExtraAttack"
              ],
              "AILJJDMKONE": "Rate",
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                }
              ]
            },
            {
              "$type": "MoleMole.Config.AttachToAnimatorStateIDMixin",
              "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk_StaminaCost",
              "BILMCNCKIAO": "",
              "stateGroupIDs": [
                "State_Group_Avatar_For_ExtraAttack"
              ]
            }
          ],
          "state": "AttackUp"
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk_StaminaCost": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_CostStaminaRatio": "StaminaReduce"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_KillEnhanceExtraAtk_CD": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_KillEnhanceExtraAtk",
              "useLimitRange": true,
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      },
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "modifierName": "UNIQUE_Relic_KillEnhanceExtraAtk"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_FireResistance",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_FireResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Fire",
              "durationRatio": 0.4000000059604645
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_FireResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WaterResistance",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_WaterResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Water",
              "durationRatio": 0.4000000059604645
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WaterResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElectricResistance",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_EletricResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Electric",
              "durationRatio": 0.4000000059604645
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_EletricResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WindResistance",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_WindResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Wind",
              "durationRatio": 0.4000000059604645
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WindResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_IceResistance",
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_IceResistance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Ice",
              "durationRatio": 0.4000000059604645
            },
            {
              "$type": "MoleMole.Config.AttachElementTypeResistance",
              "elementType": "Frozen",
              "durationRatio": 0.4000000059604645
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_IceResistance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementDmgUpAfterCrystalShield",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Fire"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Water"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Grass"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Electric"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Ice"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Wind"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.DoActionByGainCrystalSeedMixin",
          "elementTypes": [
            "Rock"
          ],
          "actions": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "AllPlayerAvatars",
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": 0.0,
        "Dura": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamFireBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_FireAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWaterBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_WaterAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamGrassBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_GrassAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamElectricBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElecAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamIceBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_IceAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamWindBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_WindAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_ElementDmgUpAfterCrystalShield_TeamRockBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_RockAddHurtDelta": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ShieldEnhanceAtk",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_Ability_Relic_ShieldEnhanceAtk_Check",
          "gvInTalk": 0.0,
          "valueSteps": [
            -0.5,
            0.5,
            1.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_ShieldEnhanceAtk_NoBuff",
            "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff"
          ]
        },
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "NormalAttack_01",
            "NormalAttack_02",
            "NormalAttack_03",
            "NormalAttack_04",
            "NormalAttack_05",
            "NormalAttack_06",
            "ExtraAttack"
          ],
          "AILJJDMKONE": "Rate",
          "predicates": [
            {
              "$type": "BBBFIPNGHGH",
              "entityTypes": [
                "Monster"
              ]
            },
            {
              "$type": "BJONBAKPHBM",
              "target": "Self",
              "damageRatio": "All"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ShieldEnhanceAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.Predicated",
              "targetPredicates": [
                {
                  "$type": "BJONBAKPHBM",
                  "damageRatio": "All"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "param3": 0.0,
                  "key": "_Ability_Relic_ShieldEnhanceAtk_Check",
                  "useLimitRange": true,
                  "param2": 1.0,
                  "triggerID": 1.0
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.AddGlobalValue",
                  "param3": 0.0,
                  "key": "_Ability_Relic_ShieldEnhanceAtk_Check",
                  "useLimitRange": true,
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ShieldEnhanceAtk_NoBuff": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "modifierName": "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff"
            }
          ]
        },
        "UNIQUE_Relic_ShieldEnhanceAtk_HasBuff": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ShieldEnhanceAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_WaterSkillEnhanceNormalAtkAndExtraAtk",
      "abilitySpecials": {
        "duration": 0.0,
        "stack": 0.0,
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk"
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ]
        },
        "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "stack"
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "duration",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ],
          "state": "AttackUp"
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_WaterSkillEnhanceNormalAtkAndExtraAtk_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ShieldCostUpWhenElementalArtHit",
      "abilitySpecials": {
        "AttackRate": 0.0,
        "ShieldCost": 0.0,
        "Time": 0.0,
        "CDTime": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_ApplyBuff"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_ApplyBuff": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "AllPlayerAvatars",
              "temperature": true,
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "AllPlayerAvatars",
              "temperature": true,
              "predicates": [
                {
                  "$type": "CBCDFBOOFDC",
                  "logic": "LesserOrEqual",
                  "param3": 40.0,
                  "PHMALDNHHLD": ""
                }
              ],
              "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff"
            }
          ]
        },
        "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Buff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "AttackRate",
            "Actor_ShieldCostMinusRatio": "ShieldCost"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ShieldCostUpWhenElementalArtHit_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
          "gvInTalk": 0.0,
          "valueSteps": [
            0.5,
            1.5,
            100.0
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff1",
            "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff2"
          ]
        }
      ],
      "abilitySpecials": {
        "Rate": 0.0,
        "Dura": 0.0,
        "CDTime": 0.0,
        "ExtraRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_AddGlobalvalue"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_AddGlobalvalue": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_BuffTime"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
              "useLimitRange": true,
              "param2": 2.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_BuffTime": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Rate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Rate",
              2.0,
              "MUL"
            ],
            "Actor_PhysicalAddHurtDelta": "ExtraRate"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AttackUpWhenNormalAtkAndExtraAtkHit_Handler"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "temperature": true,
          "param3": 0.0,
          "key": "_ABILITY_Relic_AttackUpWhenNormalAtkAndExtraAtkHit",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_NormalDamageUpIfCostEnergy",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_NormalDamageUpIfCostEnergy_CD",
            "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "EnergyCost": 0.0,
        "DamageUp": 0.0,
        "Time": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.Predicated",
                  "temperature": true,
                  "targetPredicates": [
                    {
                      "$type": "JHMOAOPCCKE",
                      "logic": "GreaterOrEqual",
                      "param3": "EnergyCost"
                    }
                  ],
                  "successActions": [
                    {
                      "$type": "MoleMole.Config.ReviveElemEnergy",
                      "temperature": true,
                      "param3": [
                        0.0,
                        "EnergyCost",
                        "SUB"
                      ]
                    },
                    {
                      "$type": "MoleMole.Config.ApplyModifier",
                      "temperature": true,
                      "modifierName": "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Buff"
                    }
                  ]
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ]
        },
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_Buff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack"
              ],
              "AILJJDMKONE": "DamageUp"
            }
          ],
          "state": "AttackUp",
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
              "useLimitRange": true,
              "param2": -1.0,
              "triggerID": -1.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_NormalDamageUpIfCostEnergy_Check",
              "useLimitRange": true,
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_NormalDamageUpIfCostEnergy_CD": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstUpByChargeEfficiency",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "AILJJDMKONE": [
            "Ratio",
            "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY",
            "MUL"
          ],
          "predicates": [
            {
              "$type": "POOFKGMBLNA",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
              "param3": [
                "Ratio",
                "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY",
                "MUL"
              ],
              "compareType": "MoreThan"
            },
            {
              "$type": "POOFKGMBLNA",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeZero",
              "param3": [
                "Ratio",
                "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY",
                "MUL"
              ],
              "compareType": "LessAndEqual"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Burst"
          ],
          "AILJJDMKONE": "MaxDamageUp",
          "predicates": [
            {
              "$type": "POOFKGMBLNA",
              "target": "Self",
              "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
              "param3": [
                "Ratio",
                "FIGHT_PROP_NONEXTRA_CHARGE_EFFICIENCY",
                "MUL"
              ],
              "compareType": "LessAndEqual"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Ratio": 0.0,
        "MaxDamageUp": 0.0
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": "MaxDamageUp",
          "key": "_ABILITY_Relic_ElementalBurstUpByChargeMax",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "_ABILITY_Relic_ElementalBurstUpByChargeZero",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElementalBurstGainTeamEnergy",
      "abilitySpecials": {
        "Energy": 2.0,
        "CDTime": 2.0
      },
      "modifiers": {
        "UNIQUE_Relic_CheckElementalBurstAttack": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Burst"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "AllPlayerAvatars",
                  "temperature": true,
                  "predicates": [
                    {
                      "$type": "CBCDFBOOFDC",
                      "logic": "LesserOrEqual",
                      "param3": 40.0,
                      "PHMALDNHHLD": ""
                    }
                  ],
                  "modifierName": "UNIQUE_Relic_ElementalBurstAttackGainEnergy"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ElementalBurstAttackGainEnergy": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "CDTime",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "temperature": true,
              "rotationDampTime": "Eff_Weapon_TriggerGreen",
              "NHGDGLICLFB": -1.0
            },
            {
              "$type": "MoleMole.Config.ReviveElemEnergy",
              "temperature": true,
              "param3": "Energy"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_CheckElementalBurstAttack"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_RaiseDefenceAndRock",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_Defender_Level",
          "gvInTalk": 0.0,
          "valueSteps": [
            -0.5,
            0.5,
            1.5,
            2.5,
            3.5,
            10.0
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_DefenderBuff0",
            "UNIQUE_Relic_DefenderBuff1",
            "UNIQUE_Relic_DefenderBuff2",
            "UNIQUE_Relic_DefenderBuff3",
            "UNIQUE_Relic_DefenderBuff4"
          ]
        }
      ],
      "abilitySpecials": {
        "Levelup_CD": 0.0,
        "BackTime": 0.0,
        "Rate": 0.0,
        "RockRate": 0.0,
        "Time": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_Defender_NotLocalAvatar": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "BackTime",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "temperature": true,
              "predicates": [
                {
                  "$type": "FLLFBKEHJMH",
                  "predicates": [
                    {
                      "$type": "CKJNCONHFNH"
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_Relic_Defender_Levelup"
            }
          ]
        },
        "UNIQUE_Relic_Defender_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "OFJKNHNDFOO",
                  "element": "Rock"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_Relic_Defender_Levelup"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_Defender_Levelup": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Levelup_CD",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ABILITY_Relic_Defender_Level",
                  "param3": 3.5,
                  "compareType": "LessAndEqual"
                }
              ],
              "rotationDampTime": "Eff_Relic_Rock_NumberFlash",
              "NHGDGLICLFB": -1.0
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_Defender_Level",
              "useLimitRange": true,
              "param2": 4.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
            }
          ]
        },
        "UNIQUE_Relic_Defender_Level_Timer": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "Time",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.FireEffect",
              "predicates": [
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ABILITY_Relic_Defender_Level",
                  "param3": 0.5,
                  "compareType": "MoreThan"
                }
              ],
              "rotationDampTime": "Eff_Relic_Rock_NumberBehit",
              "NHGDGLICLFB": -1.0
            },
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Defender_Level",
              "useLimitRange": true,
              "param2": 4.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_DefenderBuff0": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "rotationDampTime": "Eff_Relic_Rock_Number0",
              "NHGDGLICLFB": -1.0
            }
          ]
        },
        "UNIQUE_Relic_DefenderBuff1": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_DefenceRatio": "Rate",
            "Actor_RockAddHurtDelta": "RockRate"
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "rotationDampTime": "Eff_Relic_Rock_Number1",
              "NHGDGLICLFB": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff2": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_DefenceRatio": [
              "Rate",
              2.0,
              "MUL"
            ],
            "Actor_RockAddHurtDelta": [
              "RockRate",
              2.0,
              "MUL"
            ]
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "rotationDampTime": "Eff_Relic_Rock_Number2",
              "NHGDGLICLFB": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff3": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_DefenceRatio": [
              "Rate",
              3.0,
              "MUL"
            ],
            "Actor_RockAddHurtDelta": [
              "RockRate",
              3.0,
              "MUL"
            ]
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "rotationDampTime": "Eff_Relic_Rock_Number3",
              "NHGDGLICLFB": -1.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_DefenderBuff4": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_DefenceRatio": [
              "Rate",
              4.0,
              "MUL"
            ],
            "Actor_RockAddHurtDelta": [
              "RockRate",
              4.0,
              "MUL"
            ]
          },
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "rotationDampTime": "Eff_Relic_Rock_Number4",
              "NHGDGLICLFB": -1.0
            }
          ],
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_Defender_Handler"
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.AddGlobalValue",
          "temperature": true,
          "param3": 0.0,
          "key": "_ABILITY_Relic_Defender_Level",
          "useLimitRange": true,
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_Defender_Level_Timer"
        }
      ],
      "onAvatarOut": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_Defender_NotLocalAvatar"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_HealAndHolyNova",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_State",
          "gvInTalk": 0.0,
          "valueSteps": [
            -1.5,
            -0.5,
            0.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_HealAndHolyNova_CD",
            "UNIQUE_Relic_HealAndHolyNova_Handler"
          ]
        }
      ],
      "abilitySpecials": {
        "Time": 0.0,
        "HealRatio": 0.0,
        "DamageRatio": 0.0,
        "CDTime": 0.0,
        "MaxHealAmount": 0.0,
        "TriggerType": 0.0,
        "HealAmount": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_HealAndHolyNova_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onHeal": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
                  "temperature": true,
                  "key": "_ABILITY_Relic_HealAndHolyNova_HealSum"
                },
                {
                  "$type": "MoleMole.Config.TriggerAbility",
                  "temperature": true,
                  "predicates": [
                    {
                      "$type": "POOFKGMBLNA",
                      "target": "Team",
                      "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
                      "param3": 0.0,
                      "compareType": "NoneOrEqual"
                    },
                    {
                      "$type": "POOFKGMBLNA",
                      "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
                      "param3": 0.0,
                      "compareType": "MoreThan"
                    }
                  ],
                  "abilityName": "Relic_HealAndHolyNova",
                  "abilitySpecials": {
                    "TriggerType": 0.0
                  }
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "CurTeamAvatars",
              "temperature": true,
              "predicates": [
                {
                  "$type": "FLLFBKEHJMH",
                  "predicates": [
                    {
                      "$type": "KHCIBKLALCK",
                      "targetType": "Caster",
                      "EFHKFHFMKIF": ""
                    }
                  ]
                }
              ],
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "target": "Caster",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "target": "Caster",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Caster",
              "abilityName": "Relic_HealAndHolyNova",
              "abilitySpecials": {
                "TriggerType": 1.0
              }
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Caster",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_State",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova_BallEffect": {
          "timeScale": "Level",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": [
            "Time",
            0.5,
            "ADD"
          ],
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalDir",
              "target": "CurLocalAvatar",
              "temperature": true,
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir",
              "setTarget": false
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_0",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_1",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_Dir_2",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "temperature": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_0",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_0"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "temperature": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_1",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_1"
            },
            {
              "$type": "MoleMole.Config.AddGlobalValueToTarget",
              "temperature": true,
              "srcTarget": "Self",
              "dstTarget": "Team",
              "srcKey": "_ABILITY_Relic_HealAndHolyNova_Dir_2",
              "dstKey": "_ABILITY_Relic_HealAndHolyNova_Dir_2"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "temperature": true,
              "modifierName": "Relic_HealAndHolyNova_BallEffect_Team"
            }
          ],
          "onHeal": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.SendEffectTrigger",
                  "target": "Team",
                  "temperature": true,
                  "parameter": "Blink",
                  "attachPoint": "",
                  "rotationDampTime": "Eff_Relic_Maria_Animator"
                }
              ]
            }
          ]
        },
        "Relic_HealAndHolyNova_BallEffect_Team": {
          "stacking": "Overlap",
          "modifierName": "",
          "elementDurability": [
            "Time",
            0.5,
            "ADD"
          ],
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachEffect",
              "temperature": true,
              "rotationDampTime": "Eff_Relic_Maria_Animator",
              "born": {
                "$type": "CGJIFGJJOJA",
                "direction": {
                  "$type": "AIJHOFHPJJB",
                  "directionKey": "_ABILITY_Relic_HealAndHolyNova_Dir"
                }
              },
              "NHGDGLICLFB": -1.0
            }
          ]
        },
        "UNIQUE_Relic_HealAndHolyNova_CD": {
          "timeScale": "Level",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": [
            "CDTime",
            "Time",
            "SUB"
          ],
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_State",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "target": "Team",
          "predicates": [
            {
              "$type": "POOFKGMBLNA",
              "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
              "param3": 0.0,
              "compareType": "NoneOrEqual"
            }
          ],
          "param3": 0.0,
          "key": "_ABILITY_Relic_HealAndHolyNova_TeamHasBall",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_HealAndHolyNova_BallEffect"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.Predicated",
          "temperature": true,
          "targetPredicates": [
            {
              "$type": "FKMLEICANEA",
              "logic": "Equal",
              "targetAbilityName": "",
              "targetKey": "TriggerType",
              "targetValue": 0.0
            }
          ],
          "successActions": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "target": "Team",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_HealAndHolyNova"
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.SetGlobalPos",
              "target": "CurLocalAvatar",
              "temperature": true,
              "key": "_ABILITY_Relic_HealAndHolyNova_Position",
              "setTarget": false
            },
            {
              "$type": "MoleMole.Config.SendEffectTrigger",
              "target": "Team",
              "temperature": true,
              "parameter": "Burst",
              "attachPoint": "",
              "rotationDampTime": "Eff_Relic_Maria_Animator"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "temperature": true,
              "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "overrideMapKey": "HealAmount"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": "HealAmount",
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "useLimitRange": true,
              "param2": "MaxHealAmount",
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "temperature": true,
              "globalValueKey": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "overrideMapKey": "HealAmount"
            },
            {
              "$type": "MoleMole.Config.TriggerAttackEvent",
              "target": "Caster",
              "temperature": true,
              "attackEvent": {
                "attackPattern": {
                  "$type": "ABPNLDBPPHF",
                  "triggerType": "TriggerNoRepeat",
                  "ignoreMassive": true,
                  "born": {
                    "$type": "MKLCDCJFOHO",
                    "positionKey": "_ABILITY_Relic_HealAndHolyNova_Position",
                    "directionKey": ""
                  },
                  "height": 2.0,
                  "IDLDJCPGNHD": 6.0
                },
                "attackInfo": {
                  "attackTag": "RelicSkill",
                  "attenuationTag": "",
                  "attenuationGroup": "default",
                  "attackProperty": {
                    "AILJJDMKONE": 0.0,
                    "bonusCriticalHurt": 100.0,
                    "ignoreAttackerProperty": true,
                    "strikeType": "Default",
                    "enBreak": 0.0,
                    "actorGrassSubHurtDelta": [
                      "DamageRatio",
                      "HealAmount",
                      "MUL"
                    ],
                    "bonusCritical": 0.0
                  },
                  "hitPattern": {
                    "onHitEffectName": "default",
                    "hitImpulseType": "LV1",
                    "hitHaltTimeScale": 0.009999999776482582
                  }
                }
              },
              "targetType": "Enemy"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "CurTeamAvatars",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealAndHolyNova_HealSum",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_HeaQAtest",
      "modifiers": {
        "Relic_HeaQAtest": {
          "modifierName": "",
          "elementDurability": 20.0,
          "bonusCriticalHurt": 100.0,
          "onHeal": [
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "temperature": true,
              "key": "Add_HealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "temperature": true,
              "key": "Add_RealHealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "temperature": true,
              "damageRatio": "Set",
              "key": "Set_onHealQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "temperature": true,
              "damageRatio": "Set",
              "key": "Set_onHealRealQATest"
            }
          ],
          "onBeingHealed": [
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "temperature": true,
              "key": "Add_onBeingHealedSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "temperature": true,
              "key": "Add_onBeingHealedRealSumQATest"
            },
            {
              "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
              "temperature": true,
              "damageRatio": "Set",
              "key": "Set_onBeingHealedQATest"
            },
            {
              "$type": "MoleMole.Config.GetHPHealedToGlobalValue",
              "temperature": true,
              "damageRatio": "Set",
              "key": "Set_onBeingHealedRealQATest"
            }
          ]
        }
      },
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "Relic_HeaQAtest"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Add_HealSumQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Add_RealHealSumQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Set_onHealQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Set_onHealRealQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Add_onBeingHealedSumQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Add_onBeingHealedRealSumQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Set_onBeingHealedQATest",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "Set_onBeingHealedRealQATest",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackUpWhenHPdown",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
          "onTriggerUltimateSkill": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "param3": 0.0,
              "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_AttackUp_BurstBuff"
            }
          ],
          "clearSkillIdDelay": 0.20000000298023224
        }
      ],
      "abilitySpecials": {
        "Dura": 0.0,
        "Base_Ratio": 0.0,
        "Ratio": 0.0,
        "MaxLevel": 0.0,
        "TriggerCD": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AttackUp_BurstBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByEventMixin",
              "onEvent": "HPDown",
              "actions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "modifierName": "UNIQUE_Relic_AttackUpWhenHPdown_TriggerCD"
                }
              ],
              "costEnergyDeltaName": ""
            },
            {
              "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
              "globalValueKey": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "gvInTalk": 0.0,
              "valueSteps": [
                0.5,
                1.5,
                2.5,
                3.5,
                4.5,
                5.5,
                6.5,
                7.5,
                8.5,
                9.5,
                10.5
              ],
              "modifierNameSteps": [
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff1",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff2",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff3",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff4",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff5",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff6",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff7",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff8",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff9",
                "UNIQUE_Relic_AttackUpWhenHPdown_Buff10"
              ]
            }
          ],
          "properties": {
            "Actor_AttackRatio": "Base_Ratio"
          },
          "state": "AttackUp"
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_TriggerCD": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "TriggerCD",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
              "useLimitRange": true,
              "param2": "MaxLevel",
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Ratio"
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              2.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff3": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              3.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff4": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              4.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff5": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              5.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff6": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              6.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff7": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              7.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff8": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              8.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff9": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              9.0,
              "MUL"
            ]
          }
        },
        "UNIQUE_Relic_AttackUpWhenHPdown_Buff10": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": [
              "Ratio",
              10.0,
              "MUL"
            ]
          }
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "_ABILITY_Relic_AttackUpWhenHPdown_GV",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "onAvatarOut": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_AttackUp_BurstBuff"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_AttackWithExtraDamage",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_AttackWithExtraDamage",
          "gvInTalk": 0.0,
          "valueSteps": [
            0.5,
            1.5
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_AttackWithExtraDamage"
          ]
        }
      ],
      "abilitySpecials": {
        "Base_Rate": 0.0,
        "AttackPercentage": 0.0,
        "Keep_Time": 0.0,
        "Extra_Rate": 0.0,
        "Trigger_CD": 0.0,
        "Relic_CD": 0.0,
        "ChanceRate": 0.0,
        "Dura": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_AttackWithExtraDamage_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "target": "Self",
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Handler",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_Trigger"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackWithExtraDamage_Trigger": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Trigger_CD",
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "Trigger_CD",
          "onAdded": [
            {
              "$type": "MoleMole.Config.Randomed",
              "chance": [
                "Base_Rate",
                "Extra_Rate",
                "ChanceRate",
                "MUL",
                "ADD"
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.TriggerAbility",
                  "abilityName": "Relic_AttackWithExtraDamage"
                },
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "param3": 0.0,
                  "overrideMapKey": "ChanceRate",
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "param3": [
                    "ChanceRate",
                    1.0,
                    "ADD"
                  ],
                  "overrideMapKey": "ChanceRate",
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ]
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_Trigger"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        },
        "UNIQUE_Relic_AttackWithExtraDamage": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06"
              ],
              "AILJJDMKONE": 0.0,
              "actorGrassSubHurtDelta": [
                "FIGHT_PROP_CUR_ATTACK",
                "AttackPercentage",
                "MUL"
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_AttackWithExtraDamage_Handler",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                },
                {
                  "$type": "CCPPBGKEJBP",
                  "enBreak": 0.0
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CountDown"
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_AttackWithExtraDamage_CountDown": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Keep_Time",
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "Keep_Time",
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_AttackWithExtraDamage",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CountDown"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        },
        "UNIQUE_Relic_AttackWithExtraDamage_CD": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Relic_CD",
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "Relic_CD",
          "onRemoved": [
            {
              "$type": "MoleMole.Config.Randomed",
              "temperature": true,
              "chance": "Base_Rate",
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "temperature": true,
                  "param3": 1.0,
                  "key": "_ABILITY_Relic_AttackWithExtraDamage",
                  "param2": 0.0,
                  "triggerID": 0.0
                },
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "temperature": true,
                  "param3": 0.0,
                  "overrideMapKey": "ChanceRate",
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ],
              "failActions": [
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "temperature": true,
                  "param3": 1.0,
                  "overrideMapKey": "ChanceRate",
                  "param2": 0.0,
                  "triggerID": 0.0
                },
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "temperature": true,
                  "param3": 0.0,
                  "key": "_ABILITY_Relic_AttackWithExtraDamage_Handler",
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ]
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "temperature": true,
          "param3": 0.0,
          "key": "_ABILITY_Relic_AttackWithExtraDamage_Handler",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "temperature": true,
          "param3": 0.0,
          "key": "_ABILITY_Relic_AttackWithExtraDamage",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.Randomed",
          "chance": "Base_Rate",
          "successActions": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_AttackWithExtraDamage",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "param3": 0.0,
              "overrideMapKey": "ChanceRate",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "param3": 1.0,
              "overrideMapKey": "ChanceRate",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "param3": 0.0,
              "key": "_ABILITY_Relic_AttackWithExtraDamage_Handler",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_Handler"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CountDown"
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage_CD"
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_AttackWithExtraDamage"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "temperature": true,
          "param3": 1.0,
          "key": "_ABILITY_Relic_AttackWithExtraDamage",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ReactionGrassEnhance",
      "abilitySpecials": {
        "ResistDown": 0.0,
        "Dura": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ReactionGrassEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra",
                    "Elemental_Burst"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Target",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_ReactionGrassEnhance_ApplyBuff"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ReactionGrassEnhance_ApplyBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_GrassSubHurtDelta": [
              0.0,
              1.0,
              "ResistDown",
              "MUL",
              "SUB"
            ]
          },
          "state": "DefenseDown",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ReactionGrassEnhance_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ElemMasteryGathering",
      "abilitySpecials": {
        "Rate": 0.0,
        "ElemMastery": 0.0,
        "Duration": 0.0,
        "Trigger_CD": 0.0,
        "Max_Same_Value": 3.0,
        "Max_Diff_Value": 3.0,
        "SameNumber": 0.0,
        "DiffNumber": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ElemMasteryGathering_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Explode",
                "Stream",
                "Burning",
                "Melt",
                "Freeze",
                "Shock",
                "Superconductor",
                "SwirlFire",
                "SwirlWater",
                "SwirlElectric",
                "SwirlIce",
                "CrystallizeFire",
                "CrystallizeWater",
                "CrystallizeElectric",
                "CrystallizeIce",
                "Overdose",
                "OverdoseElectric",
                "OverdoseGrass",
                "Overgrow",
                "OvergrowMushroomFire",
                "OvergrowMushroomElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_ElemMasteryGathering_Adder"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ElemMasteryGathering_Adder": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Trigger_CD",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetSameElementCountToGlobalValue",
              "temperature": true,
              "checkSameElement": true,
              "globalValueKey": "_RELIC_ElemMasteryGathering_Same_Number",
              "teamBaseOn": "AllTeams"
            },
            {
              "$type": "MoleMole.Config.SetSameElementCountToGlobalValue",
              "temperature": true,
              "globalValueKey": "_RELIC_ElemMasteryGathering_Diff_Number",
              "teamBaseOn": "AllTeams"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "temperature": true,
              "globalValueKey": "_RELIC_ElemMasteryGathering_Same_Number",
              "overrideMapKey": "SameNumber"
            },
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "temperature": true,
              "globalValueKey": "_RELIC_ElemMasteryGathering_Diff_Number",
              "overrideMapKey": "DiffNumber"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_RELIC_ElemMasteryGathering_Same_Number",
                  "param3": "Max_Same_Value",
                  "compareType": "MoreThan"
                }
              ],
              "param3": "Max_Same_Value",
              "overrideMapKey": "SameNumber",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "predicates": [
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_RELIC_ElemMasteryGathering_Diff_Number",
                  "param3": "Max_Diff_Value",
                  "compareType": "MoreThan"
                }
              ],
              "param3": "Max_Diff_Value",
              "overrideMapKey": "DiffNumber",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_ElemMasteryGathering"
            },
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "temperature": true,
              "modifierName": "UNIQUE_ElemMasteryGathering"
            }
          ]
        },
        "UNIQUE_ElemMasteryGathering": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Duration",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemMasteryDelta": [
              "ElemMastery",
              "DiffNumber",
              "MUL"
            ],
            "Actor_AttackRatio": [
              "Rate",
              "SameNumber",
              "MUL"
            ]
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ElemMasteryGathering_Handler"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_ElemMasteryGathering"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ExtraAttackCauseSpeedAndDamage",
      "abilitySpecials": {
        "Rate1": 0.0,
        "Rate2": 0.0,
        "Dura": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_ExtraAttackCauseSpeedAndDamage_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_ExtraAttackCauseSpeedAndDamage_Buff"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_ExtraAttackCauseSpeedAndDamage_Buff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Dura",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack"
              ],
              "AILJJDMKONE": "Rate2"
            }
          ],
          "properties": {
            "Animator_AttackSpeedRatio": "Rate1"
          },
          "state": "SpeedUp",
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_ExtraAttackCauseSpeedAndDamage_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_OvergrowReactionEnhance",
      "abilitySpecials": {
        "Overgrow_Up_Percentage": 0.0,
        "OvergrowFire_Up_Percentage": 0.0,
        "OvergrowElectric_Up_Percentage": 0.0,
        "Duration": 0.0,
        "Stack": 0.0,
        "TransRatio": 0.0,
        "Trigger_CD": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_OvergrowReactionEnhance_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.DoActionByElementReactionMixin",
              "entityTypes": [
                "Monster"
              ],
              "reactionTypes": [
                "Overgrow",
                "OvergrowMushroomFire",
                "OvergrowMushroomElectric"
              ],
              "actions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "temperature": true,
                  "modifierName": "OvergrowReactionEnhance_CD"
                }
              ]
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "Relic_OvergrowReactionEnhance_Base"
            }
          ]
        },
        "Relic_OvergrowReactionEnhance_Base": {
          "modifierName": "",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemReactOvergrowDelta": "Overgrow_Up_Percentage",
            "Actor_ElemReactOvergrowFireDelta": "OvergrowFire_Up_Percentage",
            "Actor_ElemReactOvergrowElectricDelta": "OvergrowElectric_Up_Percentage"
          },
          "isLimitedProperties": true
        },
        "Relic_OvergrowReactionEnhance_Extra": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "Stack"
          },
          "modifierName": "",
          "elementDurability": "Duration",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_ElemReactOvergrowDelta": [
              "Overgrow_Up_Percentage",
              "TransRatio",
              "MUL"
            ],
            "Actor_ElemReactOvergrowFireDelta": [
              "OvergrowFire_Up_Percentage",
              "TransRatio",
              "MUL"
            ],
            "Actor_ElemReactOvergrowElectricDelta": [
              "OvergrowElectric_Up_Percentage",
              "TransRatio",
              "MUL"
            ]
          },
          "isLimitedProperties": true
        },
        "OvergrowReactionEnhance_CD": {
          "stacking": "Unique",
          "modifierName": "",
          "elementDurability": "Trigger_CD",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.ApplyModifier",
              "temperature": true,
              "modifierName": "Relic_OvergrowReactionEnhance_Extra"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_OvergrowReactionEnhance_Handler"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "temperature": true,
          "modifierName": "Relic_OvergrowReactionEnhance_Extra"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_Narcissus",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_Narcissus",
          "gvInTalk": 0.0,
          "valueSteps": [
            0.5,
            1.5,
            2.5,
            10.0
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_Narcissus_Buff1",
            "UNIQUE_Relic_Narcissus_Buff2",
            "UNIQUE_Relic_Narcissus_Buff3"
          ]
        }
      ],
      "abilitySpecials": {
        "Time": 0.0,
        "Rate1": 0.0,
        "Rate2": 0.0,
        "Rate3": 0.0,
        "Rate11": 0.0,
        "Rate12": 0.0,
        "Rate13": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_Narcissus_Check": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAttackLanded": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "NormalAttack_01",
                    "NormalAttack_02",
                    "NormalAttack_03",
                    "NormalAttack_04",
                    "NormalAttack_05",
                    "NormalAttack_06"
                  ]
                },
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_Narcissus_NormalAttackBuff"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "ExtraAttack"
                  ]
                },
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_Narcissus_ExtraAttackBuff"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "FallingAttack"
                  ]
                },
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_Narcissus_FallingAttackBuff"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Art",
                    "Elemental_Art_Hold",
                    "Elemental_Art_Extra"
                  ]
                },
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_Narcissus_ElementalArtBuff"
                }
              ]
            },
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "targetPredicates": [
                {
                  "$type": "IPJIAJLNIKC",
                  "attackTags": [
                    "Elemental_Burst"
                  ]
                },
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_Narcissus_ElementalBurstBuff"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_NormalAttackBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_ExtraAttackBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_FallingAttackBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_ElementalArtBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_ElementalBurstBuff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "param3": 1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": -1.0,
              "key": "_ABILITY_Relic_Narcissus",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_Narcissus_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Rate1",
            "Actor_WaterAddHurtDelta": "Rate11"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_Narcissus_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Rate2",
            "Actor_WaterAddHurtDelta": "Rate12"
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_Narcissus_Buff3": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AttackRatio": "Rate3",
            "Actor_WaterAddHurtDelta": "Rate13"
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "_ABILITY_Relic_Narcissus",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_Narcissus_Check"
        }
      ],
      "onRemoved": [
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "param3": 0.0,
          "key": "_ABILITY_Relic_Narcissus",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_Pari",
      "abilitySpecials": {
        "DamageUp_Base_Ratio": 0.0,
        "DamageUp_Sub_Ratio": 0.0,
        "Duration": 0.0,
        "Max_Stack": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_Pari_Damage_Up_Base": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra",
                "Elemental_Burst"
              ],
              "AILJJDMKONE": "DamageUp_Base_Ratio"
            }
          ],
          "onBeingHit": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "predicates": [
                {
                  "$type": "CCPPBGKEJBP",
                  "enBreak": 0.0
                }
              ],
              "modifierName": "UNIQUE_Relic_Pari_Damage_Up_Sub"
            }
          ]
        },
        "UNIQUE_Relic_Pari_Damage_Up_Sub": {
          "stacking": "MultipleRefreshNoRemove",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "Max_Stack"
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Duration",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra",
                "Elemental_Burst"
              ],
              "AILJJDMKONE": [
                "DamageUp_Base_Ratio",
                "DamageUp_Sub_Ratio",
                "MUL"
              ]
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_Pari_Damage_Up_Base"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_NorAndExtraAtkUp",
      "abilitySpecials": {
        "DmgRate": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_NorAndExtraAtkUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack"
              ],
              "AILJJDMKONE": "DmgRate"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_NorAndExtraAtkUp"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_BuffWhenHPUpAndDown",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.DoActionByEventMixin",
          "onEvent": "HPChange",
          "actions": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_BuffWhenHPUpAndDown_Buff"
            }
          ],
          "costEnergyDeltaName": ""
        }
      ],
      "abilitySpecials": {
        "Crit": 0.0,
        "Time": 0.0,
        "Max_Stack": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_BuffWhenHPUpAndDown_Buff": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "Max_Stack"
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_CriticalDelta": "Crit"
          },
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_ArtSkillDamageUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Art",
            "Elemental_Art_Hold",
            "Elemental_Art_Extra"
          ],
          "AILJJDMKONE": "DamagePer"
        }
      ],
      "abilitySpecials": {
        "DamagePer": 0.0
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_OffStageArtDamageUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Art",
            "Elemental_Art_Hold",
            "Elemental_Art_Extra"
          ],
          "AILJJDMKONE": "DamageRate1"
        },
        {
          "$type": "MoleMole.Config.ModifyDamageMixin",
          "attackTags": [
            "Elemental_Art",
            "Elemental_Art_Hold",
            "Elemental_Art_Extra"
          ],
          "AILJJDMKONE": [
            "DamageRate1",
            "IsOffStage",
            "MUL"
          ]
        }
      ],
      "abilitySpecials": {
        "DamageRate1": 0.0,
        "OffstageRatio": 0.0,
        "Time": 0.0,
        "IsOffStage": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_OffStageArtDamageUp_OnStage": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "Time",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "param3": 0.0,
              "overrideMapKey": "IsOffStage",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.Predicated",
          "targetPredicates": [
            {
              "$type": "CKJNCONHFNH"
            }
          ],
          "successActions": [
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "param3": 0.0,
              "overrideMapKey": "IsOffStage",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "param3": "OffstageRatio",
              "overrideMapKey": "IsOffStage",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        }
      ],
      "onAvatarIn": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_OffStageArtDamageUp_OnStage"
        }
      ],
      "onAvatarOut": [
        {
          "$type": "MoleMole.Config.SetOverrideMapValue",
          "temperature": true,
          "param3": "OffstageRatio",
          "overrideMapKey": "IsOffStage",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.RemoveUniqueModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_OffStageArtDamageUp_OnStage"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_HealToDamageExtra",
      "abilitySpecials": {
        "RecorderDuration": 0.0,
        "BuffDuration": 0.0,
        "BuffCount": 0.0,
        "DamageExtraRatio": 0.0,
        "MaxRecodeLimit": 0.0,
        "_HealSumToBuff": 0.0,
        "Current_Count": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_HealToDamageExtra_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealToDamageExtra_HealSum",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onHeal": [
            {
              "$type": "MoleMole.Config.Predicated",
              "target": "Target",
              "temperature": true,
              "targetPredicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Avatar"
                  ]
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "target": "Team",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_HealToDamageExtra_HealRecorder"
                },
                {
                  "$type": "MoleMole.Config.GetHealAmountToGlobalValue",
                  "target": "Team",
                  "temperature": true,
                  "key": "_ABILITY_Relic_HealToDamageExtra_HealSum"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_HealToDamageExtra_HealRecorder": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": [
            "RecorderDuration",
            0.5,
            "ADD"
          ],
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "RecorderDuration",
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_HealToDamageExtra_HealSum",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "onRemoved": [
            {
              "$type": "MoleMole.Config.TriggerAbility",
              "target": "Caster",
              "temperature": true,
              "abilityName": "Relic_HealToDamageExtra"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "target": "Team",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_HealToDamageExtra_HealRecorder"
            }
          ],
          "onThinkIntervalIsFixedUpdate": true
        },
        "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff_Handler": {
          "timeScale": "Level",
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "BuffDuration",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.CurLocalAvatarMixinV2",
              "modifierName": "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff"
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValueToOverrideMap",
              "target": "Team",
              "temperature": true,
              "globalValueKey": "_ABILITY_Relic_HealToDamageExtra_HealSum",
              "overrideMapKey": "_HealSumToBuff"
            },
            {
              "$type": "MoleMole.Config.SetOverrideMapValue",
              "temperature": true,
              "param3": "_HealSumToBuff",
              "overrideMapKey": "_HealSumToBuff",
              "useLimitRange": true,
              "param2": "MaxRecodeLimit",
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "target": "Team",
              "temperature": true,
              "param3": "BuffCount",
              "key": "_ABILITY_Relic_HealToDamageExtra_BuffCount",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.FireEffect",
              "target": "CurLocalAvatar",
              "temperature": true,
              "rotationDampTime": "Eff_Relic_ExtraAttackUp",
              "NHGDGLICLFB": -1.0
            }
          ]
        },
        "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.ModifyDamageCountMixin",
              "attackTags": [
                "NormalAttack_01",
                "NormalAttack_02",
                "NormalAttack_03",
                "NormalAttack_04",
                "NormalAttack_05",
                "NormalAttack_06",
                "ExtraAttack",
                "FallingAttack",
                "Elemental_Art",
                "Elemental_Art_Hold",
                "Elemental_Art_Extra",
                "Elemental_Burst"
              ],
              "AILJJDMKONE": 0.0,
              "actorGrassSubHurtDelta": [
                "_HealSumToBuff",
                "DamageExtraRatio",
                "MUL"
              ],
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                }
              ],
              "maxModifyCount": "Current_Count",
              "successActions": [
                {
                  "$type": "MoleMole.Config.SetOverrideMapValue",
                  "temperature": true,
                  "param3": [
                    "Current_Count",
                    1.0,
                    "SUB"
                  ],
                  "overrideMapKey": "Current_Count",
                  "param2": 0.0,
                  "triggerID": 0.0
                }
              ],
              "maxCountActions": [
                {
                  "$type": "MoleMole.Config.SetGlobalValue",
                  "target": "Team",
                  "temperature": true,
                  "param3": 0.0,
                  "key": "_ABILITY_Relic_HealToDamageExtra_BuffCount",
                  "param2": 0.0,
                  "triggerID": 0.0
                },
                {
                  "$type": "MoleMole.Config.ApplyModifier",
                  "target": "Team",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_Buff_Remover"
                }
              ]
            }
          ],
          "state": "AttackUp"
        },
        "UNIQUE_Relic_Buff_Remover": {
          "timeScale": "Level",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 0.10000000149011612,
          "bonusCriticalHurt": 100.0,
          "onRemoved": [
            {
              "$type": "MoleMole.Config.RemoveModifier",
              "target": "Team",
              "temperature": true,
              "predicates": [
                {
                  "$type": "POOFKGMBLNA",
                  "target": "Team",
                  "key": "_ABILITY_Relic_HealToDamageExtra_BuffCount",
                  "param3": 0.0
                }
              ],
              "modifierName": "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff_Handler"
            }
          ]
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "modifierName": "UNIQUE_Relic_HealToDamageExtra_Handler"
        },
        {
          "$type": "MoleMole.Config.SetGlobalValue",
          "target": "Team",
          "param3": 0.0,
          "key": "_ABILITY_Relic_HealToDamageExtra_HealSum",
          "param2": 0.0,
          "triggerID": 0.0
        }
      ],
      "onAbilityStart": [
        {
          "$type": "MoleMole.Config.RemoveModifier",
          "target": "Team",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff_Handler"
        },
        {
          "$type": "MoleMole.Config.SetOverrideMapValue",
          "temperature": true,
          "param3": "BuffCount",
          "overrideMapKey": "Current_Count",
          "param2": 0.0,
          "triggerID": 0.0
        },
        {
          "$type": "MoleMole.Config.AttachModifier",
          "target": "Team",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_HealToDamageExtra_DamageExtraBuff_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CrystalShieldToRockDamageUp",
      "abilitySpecials": {
        "BuffDuration": 0.0,
        "RockDamageUp": 0.0,
        "BuffUpRatio": 0.0,
        "BuffUpDuration": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_CrystalShieldToRockDamageUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.OnAvatarUseSkillMixin",
              "onTriggerSkill": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "modifierName": "UNIQUE_Relic_CrystalShieldToRockDamageUp_Buff"
                }
              ],
              "clearSkillIdDelay": 0.20000000298023224
            }
          ],
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_CrystalShieldToRockDamageUp_BuffUp",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_CrystalShieldToRockDamageUp_Buff": {
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "BuffDuration",
          "bonusCriticalHurt": 100.0,
          "modifierMixins": [
            {
              "$type": "MoleMole.Config.AttachModifierToPredicateMixin",
              "predicates": [
                {
                  "$type": "CKJNCONHFNH"
                },
                {
                  "$type": "BNNPNEDKIIH",
                  "predicates": [
                    {
                      "$type": "POOFKGMBLNA",
                      "target": "Team",
                      "key": "_ABILITY_CrystalSeed_Fire_Shield_Mark",
                      "param3": 1.0
                    },
                    {
                      "$type": "POOFKGMBLNA",
                      "target": "Team",
                      "key": "_ABILITY_CrystalSeed_Water_Shield_Mark",
                      "param3": 1.0
                    },
                    {
                      "$type": "POOFKGMBLNA",
                      "target": "Team",
                      "key": "_ABILITY_CrystalSeed_Ice_Shield_Mark",
                      "param3": 1.0
                    },
                    {
                      "$type": "POOFKGMBLNA",
                      "target": "Team",
                      "key": "_ABILITY_CrystalSeed_Electric_Shield_Mark",
                      "param3": 1.0
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp_Add"
            },
            {
              "$type": "MoleMole.Config.AttachModifierToPredicateMixin",
              "predicates": [
                {
                  "$type": "BNNPNEDKIIH",
                  "predicates": [
                    {
                      "$type": "FLLFBKEHJMH",
                      "predicates": [
                        {
                          "$type": "CKJNCONHFNH"
                        }
                      ]
                    },
                    {
                      "$type": "CFGBONPNELL",
                      "predicates": [
                        {
                          "$type": "POOFKGMBLNA",
                          "target": "Team",
                          "key": "_ABILITY_CrystalSeed_Fire_Shield_Mark",
                          "param3": 0.0,
                          "compareType": "NoneOrEqual"
                        },
                        {
                          "$type": "POOFKGMBLNA",
                          "target": "Team",
                          "key": "_ABILITY_CrystalSeed_Water_Shield_Mark",
                          "param3": 0.0,
                          "compareType": "NoneOrEqual"
                        },
                        {
                          "$type": "POOFKGMBLNA",
                          "target": "Team",
                          "key": "_ABILITY_CrystalSeed_Ice_Shield_Mark",
                          "param3": 0.0,
                          "compareType": "NoneOrEqual"
                        },
                        {
                          "$type": "POOFKGMBLNA",
                          "target": "Team",
                          "key": "_ABILITY_CrystalSeed_Electric_Shield_Mark",
                          "param3": 0.0,
                          "compareType": "NoneOrEqual"
                        }
                      ]
                    }
                  ]
                }
              ],
              "modifierName": "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp_Remove"
            },
            {
              "$type": "MoleMole.Config.AttachModifierToGlobalValueMixin",
              "globalValueKey": "_ABILITY_Relic_CrystalShieldToRockDamageUp_BuffUp",
              "valueSteps": [
                0.5,
                1.5
              ],
              "modifierNameSteps": [
                "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp"
              ]
            }
          ],
          "properties": {
            "Actor_RockAddHurtDelta": "RockDamageUp"
          },
          "state": "AttackUp",
          "onRemoved": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_CrystalShieldToRockDamageUp_BuffUp",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ],
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp_Add": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 1.0,
              "key": "_ABILITY_Relic_CrystalShieldToRockDamageUp_BuffUp",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp_Remove": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": 1.0,
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": 0.0,
              "key": "_ABILITY_Relic_CrystalShieldToRockDamageUp_BuffUp",
              "param2": 0.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_CrystalShieldToRockDamageUp_BuffUp": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_RockAddHurtDelta": [
              "RockDamageUp",
              "BuffUpRatio",
              "MUL"
            ]
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.AttachModifier",
          "temperature": true,
          "modifierName": "UNIQUE_Relic_CrystalShieldToRockDamageUp_Handler"
        }
      ],
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_BuffWhenHPdebtsUpAndDown",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.HPDebtsMixin",
          "LGJNBGFEDOO": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "modifierName": "UNIQUE_Relic_BuffWhenHPdebtsUpAndDown_Buff"
            }
          ]
        }
      ],
      "abilitySpecials": {
        "Time": 0.0,
        "DamageUp": 0.0,
        "Max_Stack": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_BuffWhenHPdebtsUpAndDown_Buff": {
          "stacking": "MultipleAllRefresh",
          "stackingOption": {
            "abilitySpecialName": "",
            "maxModifierNumForMultipleType": "Max_Stack"
          },
          "modifierName": "",
          "isUnique": true,
          "elementDurability": "Time",
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": "DamageUp"
          },
          "state": "AttackUp",
          "isLimitedProperties": true
        }
      },
      "isDynamicAbility": true
    }
  },
  {
    "Default": {
      "$type": "MoleMole.Config.ConfigAbility",
      "abilityName": "Relic_CheckBuringDamageUp",
      "abilityMixins": [
        {
          "$type": "MoleMole.Config.AvatarCombatMixin",
          "onEnterCombat": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_Handler"
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_ResetGV"
            }
          ],
          "onExitCombat": [
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_Handler"
            },
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_ResetGV"
            }
          ]
        },
        {
          "$type": "MoleMole.Config.AttachModifierToSelfGlobalValueMixin",
          "globalValueKey": "_ABILITY_Relic_CheckBuringDamageUp_GV",
          "gvInTalk": "Max_Stack",
          "valueSteps": [
            0.5,
            1.5,
            2.5,
            3.5,
            4.5,
            100.0
          ],
          "modifierNameSteps": [
            "UNIQUE_Relic_CheckBuringDamageUp_Buff1",
            "UNIQUE_Relic_CheckBuringDamageUp_Buff2",
            "UNIQUE_Relic_CheckBuringDamageUp_Buff3",
            "UNIQUE_Relic_CheckBuringDamageUp_Buff4",
            "UNIQUE_Relic_CheckBuringDamageUp_Buff5"
          ]
        }
      ],
      "abilitySpecials": {
        "CheckInterval": 0.5,
        "Max_Stack": 0.0,
        "Per_Stack": 0.0,
        "TimeCD": 0.0,
        "DownValue": 0.0,
        "UpValue": 0.0,
        "ResetTime": 0.0
      },
      "modifiers": {
        "UNIQUE_Relic_CheckBuringDamageUp_ResetGV": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "ResetTime",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.SetGlobalValue",
              "temperature": true,
              "param3": "Max_Stack",
              "key": "_ABILITY_Relic_CheckBuringDamageUp_GV",
              "param2": 0.0,
              "triggerID": 0.0
            },
            {
              "$type": "MoleMole.Config.RemoveUniqueModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_ResetGV"
            }
          ]
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Handler": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": 0.5,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_DownTimer"
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.Predicated",
              "otherTargets": {
                "$type": "AFOOPHMLCCL",
                "topLimit": 1,
                "shapeName": "CircleR10",
                "centerBasedOn": "Team",
                "campTargetType": "Enemy",
                "doOffStage": 1.0
              },
              "temperature": true,
              "predicates": [
                {
                  "$type": "BBBFIPNGHGH",
                  "entityTypes": [
                    "Monster"
                  ]
                },
                {
                  "$type": "POOFKGMBLNA",
                  "key": "_ANIMAL_ENTITY_TYPE",
                  "param3": 0.0,
                  "compareType": "NoneOrEqual"
                },
                {
                  "$type": "NHPKNAEEMEO",
                  "abilityState": "ElementBurning"
                }
              ],
              "successActions": [
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_Uptick"
                },
                {
                  "$type": "MoleMole.Config.RemoveUniqueModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_DownTimer"
                },
                {
                  "$type": "MoleMole.Config.AttachModifier",
                  "temperature": true,
                  "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_DownTimer"
                }
              ]
            }
          ]
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Uptick": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "elementDurability": 0.800000011920929,
          "bonusCriticalHurt": 100.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": "UpValue",
              "key": "_ABILITY_Relic_CheckBuringDamageUp_GV",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_CheckBuringDamageUp_DownTimer": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": "TimeCD",
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_Downtick"
            }
          ]
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Downtick": {
          "stacking": "Unique",
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "thinkInterval": 1.0,
          "onAdded": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": [
                0.0,
                "DownValue",
                "SUB"
              ],
              "key": "_ABILITY_Relic_CheckBuringDamageUp_GV",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ],
          "onThinkInterval": [
            {
              "$type": "MoleMole.Config.AddGlobalValue",
              "temperature": true,
              "param3": [
                0.0,
                "DownValue",
                "SUB"
              ],
              "key": "_ABILITY_Relic_CheckBuringDamageUp_GV",
              "useLimitRange": true,
              "param2": 5.0,
              "triggerID": 0.0
            }
          ]
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Buff1": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": [
              "Per_Stack",
              1.0,
              "MUL"
            ]
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Buff2": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": [
              "Per_Stack",
              2.0,
              "MUL"
            ]
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Buff3": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": [
              "Per_Stack",
              3.0,
              "MUL"
            ]
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Buff4": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": [
              "Per_Stack",
              4.0,
              "MUL"
            ]
          },
          "isLimitedProperties": true
        },
        "UNIQUE_Relic_CheckBuringDamageUp_Buff5": {
          "modifierName": "",
          "isUnique": true,
          "bonusCriticalHurt": 100.0,
          "properties": {
            "Actor_AddHurtDelta": [
              "Per_Stack",
              5.0,
              "MUL"
            ]
          },
          "isLimitedProperties": true
        }
      },
      "onAdded": [
        {
          "$type": "MoleMole.Config.Predicated",
          "temperature": true,
          "targetPredicates": [
            {
              "$type": "CKDCEPKGCMH"
            }
          ],
          "successActions": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_Handler"
            }
          ],
          "failActions": [
            {
              "$type": "MoleMole.Config.AttachModifier",
              "temperature": true,
              "modifierName": "UNIQUE_Relic_CheckBuringDamageUp_ResetGV"
            }
          ]
        }
      ],
      "isDynamicAbility": true
    }
  }
]