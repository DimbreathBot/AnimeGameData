{
  "common": {
    "effectAttachShape": {
      "$type": "OEELBADKCOJ",
      "mesh": "EffectMesh"
    },
    "height": 1.0,
    "shadowViewSizeRatio": 0.0,
    "checkInSurface": true,
    "canTriggerElementReactionText": false,
    "reconnectSupport": true
  },
  "model": {
    "bornEffect": "",
    "attachEffect": "",
    "canBakeMesh": false,
    "CFAMIMFEBGH": ""
  },
  "dither": {
    "showDitherDuration": 1.0
  },
  "combat": {
    "property": {
      "endureType": "Monster_Minion",
      "weight": 101.0,
      "isInvincible": true
    },
    "beHit": {
      "hitBloodEffect": "",
      "muteAllHit": true,
      "muteAllHitText": true
    },
    "combatLock": {
      "lockShape": "CircleLockEnemy",
      "lockType": "Animal_Lv2"
    },
    "die": {
      "dieEndTime": 1.7999999523162842,
      "dieForceDisappearTime": 2.0,
      "dieDisappearEffect": ""
    }
  },
  "abilities": [
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_StaminaController",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Animal_Electrohercules_Properties_Partner",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Animal_Electrohercules_PlayAlert",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_JumpForward_ChargeHandler",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_JumpBack_Handler",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_AttackLandedHandler",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Defend_StaminaController",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Defend_LogicController",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Tutorial_AddStage",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Tutorial_JumpForward",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Tutorial_JumpBack",
      "abilityOverride": ""
    },
    {
      "abilityID": "",
      "abilityName": "Partner_Animal_Electrohercules_Tutorial_RecoverStamina",
      "abilityOverride": ""
    }
  ],
  "stateLayers": {
    "defaultLayer": {
      "$type": "PEJBHFKJHIC",
      "layerIndexName": "",
      "LEANMMLCBEJ": "",
      "stateIDs": {
        "Born": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Born": []
          },
          "resetAnimatorTriggerOnExit": [
            "DoSkill"
          ]
        },
        "NormalIdle": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Standby": []
          },
          "canDoSkill": true,
          "canSyncMove": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd",
            "DefendStart",
            "DefendEnd",
            "Rebound"
          ],
          "resetAnimatorTriggerOnExit": [
            "DoSkill"
          ]
        },
        "BeHit": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Hit_L": [
              "Audio_Animal_Electrohercules_01_Hit_L"
            ],
            "Hit_H": [
              "Audio_Animal_Electrohercules_01_Hit_H"
            ]
          },
          "resetAnimatorTriggerOnEnter": [
            "BeHit",
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "DoSkill"
          ]
        },
        "BeHitThrow": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "HitThrow": [],
            "HitThrowDrop": [],
            "HitThrowToGround": []
          },
          "resetAnimatorTriggerOnEnter": [
            "BeHit",
            "HitAir2HitDrop",
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "DoSkill"
          ]
        },
        "Struggle": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Struggle": []
          },
          "resetAnimatorTriggerOnEnter": [
            "BeHit",
            "HitAir2HitDrop",
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "DoSkill"
          ]
        },
        "Die": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Die": [
              "Audio_Animal_Electrohercules_01_Die"
            ]
          }
        },
        "Warning": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Alert": [
              "Audio_Animal_Electrohercules_01_Alert"
            ]
          },
          "canSyncMove": true,
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ],
          "canSteer": true
        },
        "JumpForward_Once": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Once": [
              "Animal_Electrohercules_01_JumpBack",
              "Audio_Animal_Electrohercules_01_JumpForward"
            ],
            "JumpForward_Once_CanTriggerCritical": []
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpForward_Once_AS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Once_AS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpForward_Critical": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Critical": []
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill",
            "CriticalTrigger"
          ]
        },
        "JumpForward_Recoil": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Recoil": []
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill",
            "CriticalTrigger"
          ]
        },
        "JumpForward_Charging": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Charging_BS": [],
            "JumpForward_Charging_Loop": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill",
            "IsCharging"
          ]
        },
        "JumpForward_Long": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Long": [
              "Animal_Electrohercules_01_JumpForward",
              "Audio_Animal_Electrohercules_01_JumpForward"
            ],
            "JumpForward_Long_CanTriggerCritical": []
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpForward_Long_AS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Long_AS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpForward_Short": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Short": [
              "Animal_Electrohercules_01_JumpForward",
              "Audio_Animal_Electrohercules_01_JumpForward"
            ],
            "JumpForward_Short_CanTriggerCritical": []
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpForward_Short_AS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpForward_Short_AS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpBack": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpBack": [
              "Animal_Electrohercules_01_JumpBack",
              "Audio_Animal_Electrohercules_01_Jump"
            ]
          },
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "JumpBack_AS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "JumpBack_AS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "IsCharging",
            "ChargeEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "Defend_BS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Defend_BS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "DefendStart",
            "DefendEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill",
            "DefendStart"
          ]
        },
        "Defend_Loop": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Defend_Loop": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "DefendStart",
            "DefendEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "Defend": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Defend": []
          },
          "resetAnimatorTriggerOnEnter": [
            "DefendStart",
            "DefendEnd"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        },
        "Defend_AS": {
          "$type": "CFDAFKKFLIN",
          "animatorStates": {
            "Defend_AS": []
          },
          "canDoSkill": true,
          "resetAnimatorTriggerOnEnter": [
            "DefendStart",
            "DefendEnd",
            "TutorialDefend"
          ],
          "resetAnimatorTriggerOnExit": [
            "BeHit",
            "DoSkill"
          ]
        }
      }
    }
  },
  "initialPoses": {
    "Default": {
      "initialPoseID": 1,
      "initialPoseParams": {
        "intParams": {
          "ActionState": "0"
        }
      }
    }
  },
  "inputKeys": [
    {
      "keyID": 1,
      "inputKeyCode": 257,
      "abilityName": ""
    },
    {
      "keyID": 1011,
      "inputKeyCode": 258,
      "abilityName": ""
    },
    {
      "keyID": 1021,
      "inputKeyCode": 259,
      "abilityName": ""
    },
    {
      "keyID": 1012,
      "inputKeyCode": 260,
      "abilityName": ""
    }
  ],
  "move": {
    "$type": "FAKGBGNIMDM",
    "IAPFIONJCHF": "RootNode"
  },
  "animal": {
    "tickAbilityElement": false,
    "hasCharacterRenderering": false
  }
}